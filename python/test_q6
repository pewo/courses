# f(x) = -5 x5 + 69 x2 - 47

def f(x):
    res = -5 * ( x ** 5 ) + 69 * ( x ** 2 ) - 47
    return res

#print("f0",f(0))
#print("f1",f(1))
#print("f2",f(2))
#print("f3",f(3))


def future_value(present_value, annual_rate, periods_per_year, years):
    rate_per_period = annual_rate / periods_per_year
    periods = periods_per_year * years
    
    # FV = PC(1+rate)**periods
    fv = present_value * ( 1 + rate_per_period ) ** periods
    return(fv)


#print("$1000 at 2% compounded daily for 3 years yields $", future_value(1000, .02, 365, 3))
#print("$1000 at 2% compounded daily for 3 years yields $", future_value(500, .04, 10, 10))
                                                         
import math

def poly(sides,length):
    res = 1/4.0 * sides * (length*length) / (math.tan(math.pi/sides))
    print("sides=",sides,"length=",length,"res=",res)

poly(5,7)
poly(7,3)


def max_of_2(a, b):
    if a > b:
        return a
    else:
        return b

def max_of_3(a, b, c):
    return max_of_2(a, max_of_2(b, c))


def project_to_distance(point_x, point_y, distance):
    dist_to_origin = math.sqrt(point_x ** 2 + point_y ** 2)    
    scale = distance / dist_to_origin
    print(point_x * scale, point_y * scale)
    
project_to_distance(2, 7, 4)
